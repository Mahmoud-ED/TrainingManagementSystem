@model CourseFormViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@{
    ViewData["Title"] = Model.Id != Guid.Empty ? $"تعديل بيانات البرنامج التدريبي: {Model.Name}" : "إنشاء برنامج تدريبي جديد";
}
<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">@ViewData["Title"]</h3>
        </div>
        @* يجب أن يكون الفورم هو العنصر الخارجي الذي يلف كل شيء سيتم إرساله *@
        <form asp-action="Create" method="post" id="createCourseForm">
            @Html.AntiForgeryToken() @* مهم جداً لأمان الفورم *@
            <div asp-validation-summary="ModelOnly" class="alert alert-danger m-3"></div>

            @* حقل مخفي لـ ID الدورة (إذا كانت موجودة للتعديل أو تم اختيارها) *@
            @* إذا كانت هذه صفحة "إنشاء" فقط، وهذا الحقل يتم ملؤه من اختيار كارد، فمكانه صحيح. *@
            @* إذا كانت هذه الصفحة تستخدم أيضاً لـ "تعديل" دورة موجودة، فيجب أن يكون Model.Id له قيمة هنا. *@
            <input type="hidden" asp-for="Id" id="hiddenCourseIdInput" />


            @if (Model.Course != null) // يعني أننا نعرض معلومات دورة موجودة (ربما بعد اختيارها أو عند التعديل)
            {
                <div class="card shadow-sm m-3 bg-light border-primary">
                    <div class="card-header bg-info text-white">
                        @* تغيير اللون للتمييز *@
                        <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>معلومات الدورة المختارة/الحالية</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <h4>@Model.Course.Name <small class="text-muted">(@Model.Course.Level?.Name)</small></h4>
                                @if (!string.IsNullOrEmpty(Model.Course.Description))
                                {
                                    <p class="text-muted"><em>@Model.Course.Description</em></p>
                                }
                            </div>
                            <div class="col-md-4 text-md-end">
                                <p class="mb-1"><strong>المحور:</strong> @Model.Course.CourseClassification?.Name</p>
                                <p class="mb-0"><strong>المستوى:</strong> @Model.Course.Level?.Name</p>
                            </div>
                        </div>
                        @* هنا يمكنك وضع حقول النموذج الرئيسية إذا كانت الدورة مختارة ويجب أن تكون للقراءة فقط أو معبأة مسبقًا *@
                        @* مثال: *@
                        @* <div class="form-group mt-3"> *@
                        @* <label asp-for="Name" class="control-label"></label> *@
                        @* <input asp-for="Name" class="form-control" readonly /> *@
                        @* </div> *@
                    </div>
                </div>
            }
            else if (Model.Id == Guid.Empty && Model.CourseList != null && Model.CourseList.Any()) // نعرض قائمة الاختيار فقط إذا كنا في وضع إنشاء جديد ولم يتم اختيار دورة بعد
            {
                <div class="container mt-4 p-3 border rounded mb-3">
                    <h4 class="mb-3 text-primary"><i class="fas fa-tasks me-2"></i>اختيار دورة موجودة (اختياري)</h4>
                    <p class="text-muted">إذا كانت هذه الدورة تكرارًا أو تحديثًا لدورة سابقة، يمكنك اختيارها من القائمة أدناه لربط التفاصيل الجديدة بها.</p>
                    @* الحقل المخفي هنا سيتم ملؤه بواسطة JavaScript عند اختيار كارد. *@
                    @* الاسم يجب أن يكون مطابقًا للخاصية التي تريد ربطها في الكنترولر، ربما 'Id' أو 'SelectedBaseCourseId' *@
                    @* <input type="hidden" asp-for="Id" id="hiddenCourseIdInput" />  -- هذا مكرر من الأعلى، تأكد من الغرض *@

                    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="courseCardsContainer">
                        @foreach (var courseItem in Model.CourseList)
                        {
                            <div class="col">
                                <div class="card h-100 course-card shadow-sm" data-course-id="@courseItem.Id" data-course-name="@courseItem.Name" style="cursor: pointer;">
                                    <div class="card-body d-flex flex-column">
                                        <h5 class="card-title">@courseItem.Name</h5>
                                        @if (!string.IsNullOrWhiteSpace(courseItem.Code))
                                        {
                                            <h6 class="card-subtitle mb-2 text-muted">@courseItem.Code</h6>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(courseItem.Description))
                                        {
                                            <p class="card-text flex-grow-1 small">
                                                @(courseItem.Description.Length > 80 ? courseItem.Description.Substring(0, 80) + "..." : courseItem.Description)
                                            </p>
                                        }
                                        else
                                        {
                                            <div class="flex-grow-1"></div>
                                        }
                                        <div class="mt-auto">
                                            @if (courseItem.CourseClassification != null)
                                            {
                                                <span class="badge bg-secondary me-1">@courseItem.CourseClassification.Name</span>
                                            }
                                            @if (courseItem.Level != null)
                                            {
                                                <span class="badge bg-info">@courseItem.Level.Name</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="card-footer text-center bg-light">
                                        <small class="text-muted">اختر هذه الدورة كقاعدة</small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    @* مكان لعرض معلومات الدورة المختارة إذا أردت ذلك قبل الإرسال *@
                    <div class="mt-3 p-2 bg-light-subtle border rounded" id="selectedCourseFeedback" style="display:none;">
                        <p class="mb-0"><strong>الدورة المختارة كقاعدة:</strong> <span id="selectedCourseNameDisplayFeedback"></span> (ID: <span id="selectedCourseIdDisplayFeedback"></span>)</p>
                        <small class="text-muted">سيتم استخدام هذه الدورة كمرجع. يمكنك تعديل التفاصيل أدناه.</small>
                    </div>
                </div>
            }
            else if (Model.Id == Guid.Empty) // وضع إنشاء جديد، ولم يتم اختيار دورة، ولا توجد قائمة دورات لعرضها
            {
                @* هنا يجب وضع حقول إدخال بيانات الدورة الرئيسية إذا لم يتم اختيار دورة *@
                @* مثل اسم الدورة، الوصف، المحور، المستوى الخ... إذا كانت مطلوبة بشكل مستقل *@
                <div class="m-3 p-3 border rounded">
                    <h4 class="mb-3 text-primary"><i class="fas fa-book me-2"></i>بيانات الدورة الجديدة</h4>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="Code" class="form-label"></label>
                            <input asp-for="Code" class="form-control" />
                            <span asp-validation-for="Code" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Description" class="form-label"></label>
                        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="CourseClassificationId" class="form-label"></label>
                            <select asp-for="CourseClassificationId" class="form-select" asp-items="Model.CourseClassifications">
                                <option value="">-- اختر المحور --</option>
                            </select>
                            <span asp-validation-for="CourseClassificationId" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="LevelId" class="form-label"></label>
                            <select asp-for="LevelId" class="form-select" asp-items="Model.Levels">
                                <option value="">-- اختر المستوى --</option>
                            </select>
                            <span asp-validation-for="LevelId" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            }

            @* قسم تفاصيل تنفيذ الدورة (CourseDetails) مشترك للجميع *@
            <div class="card-body">
                <fieldset class="mb-4 p-3 border rounded">
                    <legend class="w-auto px-2 h5 text-success"><i class="fas fa-calendar-alt me-2"></i>تفاصيل ومواعيد تنفيذ الدورة</legend>
                    <div id="courseDetailsContainer">
                        @if (Model.CourseDetailsEntries != null)
                        {
                            for (int i = 0; i < Model.CourseDetailsEntries.Count; i++)
                            {
                                @* تأكد أن الموديل الجزئي يتوقع هذه البيانات *@
                                @Html.Partial("_CourseDetailFormEntry", Model.CourseDetailsEntries[i],
                                new ViewDataDictionary(ViewData) {
                                                { "index", i },
                                                { "Statuses", Model.Statuses }, // تمرير قائمة الحالات
                                                { "Locations", Model.Locations }, // تمرير قائمة الأماكن
                                                { "CourseTypes", Model.CourseTypes } // تمرير قائمة أنواع الدورات
                                                })
                                                }
                                                }
                    </div>
                    <button type="button" id="addCourseDetailButton" class="btn btn-outline-success btn-sm mt-2">
                        <i class="fas fa-plus"></i> إضافة موعد تنفيذ آخر
                    </button>
                    <span asp-validation-for="CourseDetailsEntries" class="text-danger d-block mt-2"></span>
                </fieldset>

                <hr />
                <div class="d-flex justify-content-end p-3">
                    <a asp-action="Index" asp-controller="Courses" class="btn btn-outline-secondary me-2">
                        @* حدد الكنترولر إذا لم يكن Courses *@
                        <i class="fas fa-times me-1"></i> إلغاء
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i> @(Model.Id != Guid.Empty ? "حفظ التعديلات" : "إنشاء الدورة")
                    </button>
                </div>
            </div>
        </form> @* نهاية الفورم الرئيسي *@
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // --- START: Dynamic CourseDetail Entries ---
            function updateRemoveButtonsVisibility() {
                var entries = $("#courseDetailsContainer .course-detail-entry");
                entries.find(".remove-course-detail").toggleClass("d-none", entries.length <= 1);
            }

            // --- ملاحظة حول Re-indexing ---
            // الـ Model Binder في ASP.NET Core ذكي كفاية للتعامل مع الفجوات في الـ indices
            // (e.g., CourseDetailsEntries[0], CourseDetailsEntries[2]).
            // لذا، إعادة الفهرسة (reindexCourseDetails) ليست ضرورية عادةً وتضيف تعقيدًا.
            // إذا لم تواجه مشاكل في الـ model binding، يمكنك إزالتها.
            // لقد أبقيت على التعليقات لها إذا كنت تحتاجها لسبب خاص.

            // function reindexCourseDetails() {
            //     $("#courseDetailsContainer .course-detail-entry").each(function(newIndex, entryElement) {
            //         $(entryElement).find('input, select, textarea').each(function() {
            //             var currentName = $(this).attr('name');
            //             if (currentName) {
            //                 $(this).attr('name', currentName.replace(/CourseDetailsEntries\[\d+\]/, `CourseDetailsEntries[${newIndex}]`));
            //             }
            //             var currentId = $(this).attr('id');
            //             if (currentId) {
            //                 $(this).attr('id', currentId.replace(/CourseDetailsEntries_\d+__/, `CourseDetailsEntries_${newIndex}__`));
            //             }
            //         });
            //         $(entryElement).find('span[data-valmsg-for]').each(function() {
            //             var currentFor = $(this).attr('data-valmsg-for');
            //             if (currentFor) {
            //                $(this).attr('data-valmsg-for', currentFor.replace(/CourseDetailsEntries\[\d+\]/, `CourseDetailsEntries[${newIndex}]`));
            //             }
            //         });
            //          // Update header for the entry
            //         $(entryElement).find('.course-detail-entry-header').text(`تفصيل تنفيذ دورة #${newIndex + 1}`);
            //     });
            // }

            $("#addCourseDetailButton").click(function () {
                var currentIndex = $("#courseDetailsContainer .course-detail-entry").length;
                // var antiForgeryToken = "@GetAntiXsrfRequestToken()"; // ليس ضروريًا لـ GET عادةً

                $.ajax({
                    url: '@Url.Action("GetCourseDetailEntryPartial", "CourseDetails")', // تأكد أن الكنترولر هو Courses أو ما يناسبك
                    type: 'GET',
                    data: { index: currentIndex },
                    success: function (result) {
                        $("#courseDetailsContainer").append(result);
                        var form = $("#createCourseForm");
                        form.removeData("validator").removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse(form);
                        updateRemoveButtonsVisibility();
                        // reindexCourseDetails();
                    },
                    error: function (xhr, status, error) {
                        console.error("Error adding course detail entry:", status, error, xhr.responseText);
                        alert("حدث خطأ أثناء إضافة تفصيل الدورة. راجع الكونسول.");
                    }
                });
            });

            $("#courseDetailsContainer").on("click", ".remove-course-detail", function (e) {
                e.preventDefault();
                // لا نزيل إذا كان آخر عنصر إلا إذا كنت تريد ذلك وتضيف عنصرًا فارغًا بعد ذلك.
                // المنطق الحالي يحافظ على عنصر واحد على الأقل إذا بدأنا بواحد.
                if ($("#courseDetailsContainer .course-detail-entry").length > 1 || '@(Model.CourseDetailsEntries?.Count ?? 0)' === '0') {
                     $(this).closest(".course-detail-entry").remove();
                     updateRemoveButtonsVisibility();
                    // reindexCourseDetails();
                } else {
                     alert("يجب أن يكون هناك تفصيل واحد على الأقل للدورة.");
                }
            });

            updateRemoveButtonsVisibility();

            // Add at least one detail entry if none exist on page load for a new course
             if ('@(Model.Id == Guid.Empty && (Model.CourseDetailsEntries == null || !Model.CourseDetailsEntries.Any()))' === 'True') {
                 $("#addCourseDetailButton").trigger('click'); // استخدم trigger('click')
            }
            // --- END: Dynamic CourseDetail Entries ---


            // --- START: Course Card Selection ---
            $('#courseCardsContainer').on('click', '.course-card', function () {
                var courseId = $(this).data('course-id');
                var courseName = $(this).data('course-name'); // استخدام data-course-name أفضل

                console.log("Card clicked! Course ID: " + courseId + ", Name: " + courseName);

                // تحديث الحقل المخفي الرئيسي للدورة
                $('#hiddenCourseIdInput').val(courseId).trigger('change'); // trigger change إذا كانت هناك أي ارتباطات أخرى

                // تحديث العرض المرئي للاختيار
                $('#selectedCourseIdDisplayFeedback').text(courseId);
                $('#selectedCourseNameDisplayFeedback').text(courseName);
                $('#selectedCourseFeedback').slideDown(); // إظهار بشكل لطيف

                // تأثير بصري للكارد المختار
                $('#courseCardsContainer .course-card').removeClass('border-primary shadow-lg').addClass('shadow-sm');
                $(this).removeClass('shadow-sm').addClass('border-primary shadow-lg'); // تمييز أقوى

                // يمكنك هنا إخفاء قسم إدخال بيانات الدورة الرئيسية إذا أردت
                // وإظهار معلومات الدورة المختارة بشكل أوضح، أو حتى جلب بياناتها عبر AJAX لتعبئة حقول أخرى.
                // مثال:
                // $('#manualCourseEntrySection').hide(); // افترض أن لديك قسم بهذا الـ ID
                // $('#selectedCourseDisplaySection').show(); // قسم آخر لعرض بيانات الدورة المختارة
            });
            // --- END: Course Card Selection ---
        });
    </script>
}